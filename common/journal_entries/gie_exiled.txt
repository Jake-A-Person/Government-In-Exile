#when in civil war with comie
je_gie_civ_war = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
   group = je_group_internal_affairs

	is_shown_when_inactive = {
		country_rank >= rank_value:major_power
		is_in_civil_war = yes

		#comunist civ war
		not = {has_law = law_type:law_council_republic} 

		is_at_war = yes

		any_diplomatic_play = {
			is_diplomatic_play_type = dp_revolution
			target = root
			initiator = {
				has_law = law_type:law_council_republic
			}
			count > 0
		}	
	}

   
	possible = {
	}

   immediate = {
	#sees if a PC would be accpected in subject if true set accept_over_cult on the said subjects
	trigger_event = gie_accepted.1
   }

	complete = {
		is_at_war = no
		is_diplomatic_play_committed_participant = no
	}

	#less then -75% war support (cant do on capitulation)
	fail = {
		custom_tooltip = {
			text = ct_low_war_support
			any_diplomatic_play = {
				is_diplomatic_play_type = dp_revolution
				target_is = root

				war = {
						has_war_support = {
						target = root
						value < -75
						}
					}
			count > 0
			}
		}
	}

	#run away event
	on_fail = {
		trigger_event = gie_exiled.1
	}
	
	on_complete = {
		
	}

	weight = 10000
}

je_gie_retreat = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
   group = je_group_internal_affairs

	is_shown_when_inactive = {
	}
   
	possible = {
	}

   immediate = {   
		#custom flag/name for dyn nations
		if = {
			limit = {
				exists = c:RUS
				overlord = c:RUS
			}
			set_variable = gov_exile_rus
		}
		else_if = {
			limit = {
				exists = c:ITA
				overlord = c:ITA
			}
			set_variable = gov_exile_ita
		}
		else_if = {
			limit = {
				exists = c:CHI
				overlord = c:CHI
			}
			set_variable = gov_exile_chi
		}
		else_if = {
			limit = {
				exists = c:FRA
				overlord = c:FRA
			}
			set_variable = gov_exile_fra
		}

		top_overlord = {
			save_scope_as = oldGoverment
		}

		#Switches subjects over to the exiled goverment
		make_independent = yes
		#puppet gets all of the subjects
		if = {
			limit = {
				#diferent subjects for recognized and unrecognized
				is_country_type = recognized 
			}
			create_diplomatic_pact = {
				country = overlord
				type = puppet
			}

		}
		else = {
			create_diplomatic_pact = {
				country = overlord
				type = vassal
			}
		}




		every_subject_or_below = {
			limit = {
				overlord = this
					not = { this = scope:oldGoverment }
				}
			add_modifier = {
				name = collapse_of_imp
				years = 20
				is_decaying = yes
			}
		}

		scope:oldGoverment = {
			make_independent = yes
			if = {
				limit = {
					root = {
						is_country_type = recognized
					}
				}
				create_diplomatic_pact = {
					country = overlord
					type = protectorate
				}
			}
			else = {
				create_diplomatic_pact = {
					country = overlord
					type = tributary
				}
			}	
		}
	}

	complete = {
		overlord = {
			is_at_war = no
		}
	}

	fail = {
	}

	on_fail = {

	}
	
	on_complete = {
		add_journal_entry = {
			type = je_gie_return
		}
		add_journal_entry = {
			type = je_gie_annex_overseas_com
		}
		make_independent = yes
	}
	
	current_value = {

	}

	goal_add_value = {

	}

	progressbar = yes

	weight = 10000
	
}

#annexs the exiled gov to anex there old nations overseas land
je_gie_annex_overseas_com = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
	group = je_group_internal_affairs
 
	 is_shown_when_inactive = {
	 }

	
	 possible = {
	 }
 
	 #adds mod that removes all there convoys (-1000%) (no supply network so no market access)
	immediate = {
		overlord = {
			save_scope_as = return_target
			add_modifier = {
				name = nuke_convoys
			}
		}
	}

	#wait for update to supply network
	timeout = 10

	complete = {
	 }
 
	 fail = {
	 }
 
	 on_fail = {
 
	 }
	 
	 #transferes all states with no market access (the over seas ones)
	 #also not the irish states TODO change irish independence
	 on_timeout = {
		scope:return_target = {
			every_state = {
				limit = {
					owner = prev
					market_access = 0
					not = {
						state_region = {
							is_homeland = irish
						}
					}
				}
				set_state_owner = root
			}
			remove_modifier = nuke_convoys
		}
	 }
	 
	 current_value = {
 
	 }
 
	 goal_add_value = {
 
	 }
 
	 progressbar = yes
 
	 weight = 10000
 
}

#allows the exiled gov to return to their homeland
#starts irish independence TODO move to a shattered nation event/je?
je_gie_return = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
   group = je_group_internal_affairs

	is_shown_when_inactive = {
	}

	possible = {
	}

	#marks overload as the exiled gov target
	#irish independence TODO move to a shattered nation event/je?
   immediate = {
		overlord = {
			save_scope_as = return_target
		}
		overlord = {
			create_diplomatic_pact = {
				country = root
				type = gie_return_target
			}
		}
		#irish war
		if = {
			limit = { 
				any_state = {
					owner = scope:return_target
					state_region = {
						is_homeland = irish
					}
					count > 0
				}
			}
			scope:return_target = {
				trigger_event = gie_exiled.3
			}
		}
   }

   	# at lest one nation with all bellow
	# if is a return target (nation the gov was exiled from)
	# if has been humiliated by the root
	# if has the same Governance Principles i.e. both monarchies
	complete = {
		any_country = {
			custom_tooltip = {
				text = ct_pact_return
				has_diplomatic_pact = {
					who = root
					type = gie_return_target
				}
			}
			custom_tooltip = {
				text = ct_pact_humilation
				root = {
					has_diplomatic_pact = {
						who = prev
						type = humiliation
					}
				}
			}

				or = {
					and = {
						has_law = law_type:law_monarchy
						prev = {
							has_law = law_type:law_monarchy
						}
					}
					and = {
						has_law = law_type:law_presidential_republic
						prev = {
							has_law = law_type:law_presidential_republic
						}
					}
					and = {
						has_law = law_type:law_parliamentary_republic
						prev = {
							has_law = law_type:law_parliamentary_republic
						}
					}
					and = {
						has_law = law_type:law_council_republic
						prev = {
							has_law = law_type:law_council_republic
						}
					}
					and = {
						has_law = law_type:law_theocracy
						prev = {
							has_law = law_type:law_theocracy
						}
					}
				}
			count > 0	
		}
	}
	
	#starts a regime change and humiliation diplo-play
	scripted_button = je_gie_return_sb
	#add war goals if in diplo-play
	scripted_button = je_gie_return_in_diplo_sb

	#is a subject of return target (nation the gov was exiled from)
	fail = {
		custom_tooltip = {
			text = ct_pact_return_subject
			any_country = {
				has_diplomatic_pact = {
					who = root
					type = gie_return_target
				}
				root = {
					is_subject_of = prev
				}
				count > 0
			}
		}
	}

	on_fail = {
		copy_laws = overlord
	}
	
	#return taget gets this nations laws
	#return taget turns this nation into there puppet
	#transfers ruler TODO hier event
	on_complete = {
		random_country = {
			limit = {
				has_diplomatic_pact = {
					who = root
					type = gie_return_target
				}
			}
			copy_laws = root
			create_diplomatic_pact = {
				country = root
				type = puppet
			}
			remove_diplomatic_pact = {
				country = root
				type = gie_return_target
			}
			root = {
				ruler = {
					transfer_character = prevprev
					set_character_as_ruler = yes
				}
				play_as = prev
			}
		}	
	}

	weight = 10000

}

#makes sure the winner in a civil war is the target of the exiled nation
je_gie_return_target_civ_war = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
	group = je_group_internal_affairs

	is_shown_when_inactive = {
	}

	#move?
	possible = {
		any_country = {
			has_diplomatic_pact = {
				who = root
				type = gie_return_target
			}
			is_in_civil_war = yes
		}
	}

	immediate = {
		random_country = {
			limit = {
				has_diplomatic_pact = {
					who = root
					type = gie_return_target
				}
			}
			save_scope_as = return_target
		}

		# create_diplomatic_pact = {
		# 	country = THIS
		# 	type = gie_return_target
		# }

		#get return targets diplo play civil war
		random_diplomatic_play = {
			limit = {
				target = scope:return_target
				is_diplomatic_play_type = dp_revolution
			}
			#the other side in the civil war
			initiator = {
				#adds a target to return to in case the revolution wins
				create_diplomatic_pact = {
					country = root
					type = gie_return_target
				}
			}
		}
	}

	#civil war is over
	complete = {
		any_country = {
			has_diplomatic_pact = {
				who = root
				type = gie_return_target
			}
			is_in_civil_war = no
		}
	}

	on_complete = {
		
	}


	weight = 1000
}

je_gie_return_war = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
   group = je_group_internal_affairs

	is_shown_when_inactive = {
	}
   
	possible = {
	}

   immediate = {
   }

	complete = {
		is_at_war = no
		is_diplomatic_play_committed_participant = no
	}
	
	on_complete = {
		remove_variable = return_war
	}
	
	weight = 0

}

# je_gie_comie_nation = {
# 	icon = "gfx/interface/icons/event_icons/event_election.dds"
	
#    group = je_group_internal_affairs

# 	is_shown_when_inactive = {
# 	}
   
# 	possible = {
# 	}

#    immediate = {

# 	}


# 	fail = {
# 	}

# 	on_fail = {
# 	}
	
# 	on_complete = {
# 	}
	
# 	current_value = {

# 	}

# 	goal_add_value = {

# 	}

# 	on_monthly_pulse = {
# 	}

# 	weight = 10000

# }


